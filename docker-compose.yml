services:
  aspen-dev-box:
    image: aspendiscovery/aspen
    volumes:
      - "$ASPEN_DOCKER/dockerrun.sh:/start.sh"
      - "$ASPEN_CLONE:/usr/local/aspen-discovery"
      - "$ASPEN_DOCKER/site/:/usr/local/aspen-discovery/sites/test.localhostaspen"
      - "$ASPEN_DOCKER/etc/apache2/sites-enabled:/etc/apache2/sites-enabled"
      - "$ASPEN_DOCKER/site/conf/crontab_settings.txt:/etc/cron.d/cron"
      - "$ASPEN_DOCKER/aliases:/root/.bashrc"
    ports:
      - "8083:80"
    container_name: containeraspen
    networks:
      - koha_kohanet
    platform: linux/x86_64
    tty: true
    depends_on:
      aspendb:
        condition: service_healthy

  aspendb:
    container_name: aspen-db
    environment:
      - MARIADB_ROOT_PASSWORD=aspen
      - MARIADB_DATABASE=aspen
      - MARIADB_USER=aspensuper
      - MARIADB_PASSWORD=aspensuper
    image: "mariadb"
    volumes:
      - $ASPEN_CLONE/install/aspen.sql:/docker-entrypoint-initdb.d/Aspen-db-startup.sql
      - $ASPEN_DOCKER/database_start_scripts/ktd/account_profile.sql:/docker-entrypoint-initdb.d/zzz-init_account_profile.sql

    healthcheck:
      interval: 60s
      retries: 10
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
    networks:
      - koha_kohanet
    platform: linux/x86_64
    
  solr:
    image: aspendiscovery/solr
    environment:
      - SOLR_PORT=8084
      - SOLR_HOST=solr
    ports:
      - "8084:8084"
    deploy:
      endpoint_mode: dnsrr
    networks:
      - koha_kohanet
    depends_on:
      - aspen-dev-box

networks:
  koha_kohanet:
    name: koha_kohanet
    external: true
